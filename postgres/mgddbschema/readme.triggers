
Triggers that need to be migrated to Postgres
=============================================

. 'delete' needs to include 'CASCADE' for master/detail relationships
  in the 'create table':add 'ON DELETE CASCADE'
  to the primary key which represents the

. cannot set 'ON DELETE CASCADE' in all cases; that is, for multi-field values
      ACC_Accession._Object_key + _MGIType_key

. cannot set 'ON DELETE CASCADE' for vocabularies/master tables

. permissions

a) add 'delete cascade' for children that need to be deleted when their parent is deleted
   drop keys; create keys; verify 
b) retain for postgres version; multi-field referential integrity
c) do nothing; allow referential integrity (foreign key restraints) protect deletions
   do not migrated trigger to postgres (obsolete)
d) PostgreSQL/p. 354
	AFTER: will show referential integrity error *first*
	BEFORE: will show return from trigger *first*
e) use 'template_create.object.new'
   use 'template_drop.object.new'
   create deletion triggers for all _Object_key/_MGIType_key tables

a) those that will allow 'delete cascade' on 'create table'
   that is, deleting the parent will delete the children
   ========================================================

ACC_Accession._Accession_key
ACC_AccessionReference

ACC_LogicalDB._LogicalDB_key
ACC_ActualDB

ACC_MGIType : no cascades

ALL_Allele._Allele_key
ALL_Allele_CellLine
ALL_Allele_Mutation
ALL_Marker_Assoc
ALL_Label
ALL_Cre_Cache
ALL_Knockout_Cache
MRK_OMIM_Cache
SEQ_Allele_Assoc
MGI_Note._MGIType_key = 11
MGI_Reference_Assoc._MGIType_key = 11
MGI_Synonym._MGIType_key = 11
IMG_ImagePane._MGIType_key = 11
ACC_Accession._MGIType_key = 11

ALL_Cellline._CellLne_key
ACC_Accession._MGIType_key = 28

ALL_CellLine_Derivation._Derivation_key
ALL_Cellline

BIB_Refs._Refs_key
BIB_Books
BIB_Citation
BIB_DataSet_Assoc
BIB_Notes
MRK_Homology_Cache
MRK_OMIM_Cache
IMG_Cache
SEQ_Marker_Cache
SEQ_Probe_Cache
ACC_Accession._MGIType_key = 1

GXD_Antibody._Antibody_key
GXD_AntibodyMarker
GXD_AntibodyAlias
MGI_Reference_Assoc._MGIType_key = 6
ACC_Accession._MGIType_key = 6

GXD_Antigen._Antigene_key
GXD_Antibody
ACC_Accession._MGIType_key = 7

GXD_Assay._Assay_key
GXD_Specimen
GXD_GelLane
GXD_GelRow
GXD_AssayNote
GXD_Expression
ALL_Cre_Cache
ACC_Accession._MGIType_key = 8

GXD_Genotype._Genotype_key
GXD_AlleleGenotype
GXD_AllelePair
GXD_Espression
MRK_OMIM_Cache
IMG_ImagePane_Assoc._MGIType_key = 12
MGI_Note._MGIType_key = 12
ACC_Accession._MGIType_key = 12

GXD_Index._Index_key
GXD_Index_Stages

GXD_InSituResult._Result_key
GXD_InSituResultImage
GXD_ISResultStructure

GXD_Specimen._Specimen_key
GXD_InSituResult

GXD_Structure._Structure_key
GXD_StructureClosure
GXD_StructureName
ACC_Accession._MGIType_key = 38

HMD_Class._Class_key
HMD_Homology
MRK_Homology_Cache

HMD_Homology._Homology_key
HMD_Homology_Marker
HMD_Homology_Assay
HMD_Notes
MRK_HomologyCache

IMG_Image._Image_key, _ThumbnailImage_key
IMG_ImagePane
IMG_Cache
MGI_Note._MGIType_key = 9
ACC_Accession._MGIType_key = 9

IMG_ImagePane_Assoc
IMG_Cache
MGI_Note
MGI_Reference_Assoc

IMG_ImagePane._Image_key
IMG_Cache

MAP_Coord_Collection._Collection_key
MAP_Coordinate

MAP_Coordinate._Map_key
MAP_Coord_Feature
SEQ_Coord_Cache

MGI_Note._Note_key
MGI_NoteChunk

MGI_Organism._Organism_key
MRK_Chromosome
MGI_Organism_MGIType
ACC_Accession._MGIType_key = 20

MGI_Set._Set_key
MGI_SetMember

MGI_Statistic._Statistic_key
MGI_StatisticSql
MGI_Measurement

MGI_TranslationType._TranslationType_key
MGI_Translation

MLC_Text._Marker_key
MLC_Marker
MLC_Reference

MLD_Contig._Contig_key
MLD_ContigProbe

MLD_Expts._Expt_key
MLD_Expt_Marker
MLD_Expt_Notes
MLD_FISH
MLD_FISH_Region
MLD_Hybrid
MLD_Concordance
MLD_InSItu
MLD_ISRegion
MLD_Matrix
MLD_MC2point
MLD_MCDataList
MLD_RI
MLD_RIData
MLD_RI2Point
MLD_Hit
MLD_Contig
MLD_Statistics
ACC_Accession._MGIType_key = 4

MLD_Matrix._Cross_key
CRS_Cross

MRK_Marker._Marker_key
ALL_Allele
ALL_Marker_Assoc
GO_Tracking
MRK_Alias
MRK_Anchors
MRK_Classes
MRK_Current
MRK_History
MRK_Homology_Cache
MRK_Lable
MRK_Location_Cache
MRK_Notes
MRK_Offset
MRK_Reference
SEQ_Marker_Cache
MGI_Notes._MGIType_key = 2
MGI_Reference_Assoc._MGIType_key = 2
MGI_Synonym._MGIType_key = 2
ACC_Accession._MGIType_key = 2

NOM_Marker._Nomen_key
MGI_Notes._MGIType_key = 21
MGI_Reference_Assoc._MGIType_key = 21
MGI_Synonym._MGIType_key = 21
ACC_Accession._MGIType_key = 21

PRB_Allele._Allele_key
PRB_Allele_Strain

PRB_Probe._Probe_key
PRB_Marker
PRB_Notes
PRB_Reference
SEQ_Probe_Cache
ACC_Accession._MGIType_key = 3

PRB_Reference._Reference_key
PRB_Alias
PRB_Ref_Notes
PRB_RFLV
ACC_AccessionReference._MGIType_key = 3

PRB_RFLV._RFLV_key
PRB_Allele

PRB_Source._Source_key
MGI_SetMember
MGI_AttributeHistory._MGIType_key = 5
ACC_Accession._MGIType_key = 5

PRB_Strain._Strain_key
PRB_Strain_Marker
VOC_Annot._MGIType_key = 10
MGI_Not._MGIType_key = 10
MGI_Synonym._MGIType_key = 10
MGI_Translation._MGIType_key = 10
VOC_Annot._MGIType_key = 10
ACC_Accession._MGIType_key = 10

SEQ_Sequence._Sequence_key
SEQ_Allele_Assoc
SEQ_Coord_Cache
SEQ_Decscription_Cache
SEQ_GeneModel
SEQ_GeneTrap
SEQ_Marker_Cache
SEQ_Probe_Cache
SEQ_Sequence_Assoc
SEQ_Sequence_Raw
SEQ_Source_Assoc
MGI_AttributeHistory._MGIType_key = 19
MGI_Reference_Assoc._MGIType_key = 19
MGI_Note._MGIType_key = 19
ACC_Accession._MGIType_key = 19

VOC_Annot._Annot_key
VOC_Evidence

VOC_Evidence._AnnotEvidence_key
VOC_Evidence_Property
MGI_Note._MGIType_key = 25
ACC_Accession._MGIType_key = 25

VOC_Term._Term_key
VOC_GO_Cache
VOC_Text
MGI_Note._MGIType_key = 13
MGI_Synonym._MGIType_key = 13
ACC_Accession._MGIType_key = 13

VOC_Vocab._Vocab_key
VOC_VocabDAG
VOC_Term
VOC_AnnotType

GXD_StructureClosure
GXD_StructureName
VOC_AnnotType

b) retain for postgres version
   ===================================================

_MGIType_key + _Object_key
   MGI_Note
   MGI_Reference_Assoc
   MGI_Synonym
   IMG_ImagePane_Assoc
   ACC_Accession

c) if parent is deleted, referential integrity will prevent child from being deleted
   do *not* add 'ON DELETE CASCADE"
   ================================

d) delete trigges removed entirely:
   ================================
ACC_MGIType._MGIType_key
BIB_DataSet
BIB_ReviewStatus
CRS_Cross
DAG_Label._Label_key
DAG_Node._Parent_key, _Child_key, _Ancestor_key, _Descendent_key
GXD_AntibodyClass._AntibodyClass_key
GXD_AntibodyPrep (GXD_Assay)
GXD_AntibodyType
GXD_AssayType
GXD_EmbeddingMethod
GXD_FixationMethod
GXD_GelControl
GXD_GelLane._GelLane_key (GXD_GelLaneStructure, GXD_GelBand)
GXD_GelRNAType
GXD_GelRow (GXD_GelBand)
GXD_GelUnits (GXD_GelRow)
GXD_Label (GXD_AntibodyPrep, GXD_ProbePrep)
GXD_Pattern (GXD_InSituResult)
GXD_ProbePrep (GXD_Assay)
GXD_ProbeSense (GXD_ProbePrep)
GXD_Specimen
GXD_Secondary (GXD_ANtibodyPrep)
GXD_Strength (GXD_InSItuResult)
GXD_TheilerStage (GXD_Structure)
GXD_VisualizationMethod (GXD_ProbePrep)
HMD_Assay (HMD_Homology_Assay)
HMD_Class (see cascade)
HMD_Homology (see cascade)
MAP_Coord_Colection (see cascade)
MAP_Coordinate (see cascade)
MGI_NoteType
MGI_RefAssocType
MGI_Set
MGI_SynonymType
MGI_Translation
MGI_VocAssociationType
MLD_Assay_Types
MRK_Alias
MRK_Class (MRK_Marker)
MRK_Event
MRK_EventReason (MRK_Marker)
MRK_Status (MRK_Marker)
MRK_Types (MRK_Marker)
PRB_Allele
PRB_RFLV
PRB_Tissue
RI_RISet
VOC_Annot
VOC_AnnotType
VOC_Vocab

insert trigges:
===============

update trigges:
===============

document some Business Rules
============================

these trigger scripts contains business rules that should
be reviewed.  Determine which ones can be removed.

delete
======
ACC_Accession_create.object
	0) nomenclature permissions

	1) if deleting MGI Image Pixel number, then nullify X/Y Dimensions

	2) If deleting Sequence ID for Molecular Segment 
           and the same Sequence ID exists for one of the Segment's Markers:
	     Please review the relationship(s) between the Sequence ID 'xxx' 
             and the Molecular Segment's Marker(s).  
             These relationships may no longer be appropriate.

	3) If deleting the Sequence ID for a Marker 
           and the same Sequence ID exists for one of the Marker's Segments:
	     Please review the relationship(s) between the Sequence ID 'xxx' 
             and its Molecular Segments.  
             These relationships may no longer be appropriate.

	4) If max J: in Acc table does not equal max J: in max table, then re-set max J: in max table

ALL_Allele_Mutation_create.object	
	1) permissions

ALL_Marker_Assoc_create.object		
	1) if we are deleting a marker/allele association
	   then we need to set the cached marker key in ALL_Allele to be null

	2) also remove the marker association in various other tables

GXD_Antigen_create.object
	1) If Probe Source Name is null, then Anonymous Source
	   If Anonymous Source, delete upon deletion of Antigen

GXD_Assay_create.object
	1) only delete the probe prep if it is not used by another assay
	   that is, if count = 1

GXD_Structure_create.object
	1) Disallow deletion if record is not an MGI-added record,
	   only if the user does not have the sa_role

IMG_Image_create.object
	1) if this is a Full Size Image, then delete its Thumbnail

MGI_Note_create.object
	1) allele permissions

MGI_Reference_Assoc_create.object	
	1) nomenclature permissions
	2) allele permissions
	3) antibody permissions

MGI_Synonym_create.object		
	1) allele permissions

MLD_Expts_create.object
	1) Re-order the tag numbers for experiments if one is deleted

MRK_Marker_create.object			
	1) TR 2225 - Permissions for deletion of Markers
	2) Permission for non-mouse deletion (djr only)
	3) Cannot delete records w/ reference of J:80000 (RIKEN; Fantom2) 
	4) Cannot delete records w/ reference of J:65060 (RIKEN; Fantom1)

MRK_Notes_create.object			
	1) marker clip permissions

NOM_Marker_create.object
	1) Cannot delete records w/ primary reference of J:65060 (RIKEN)

PRB_Marker_create.object		
	1) If deleting an encoding Marker from a Molecular Segment and 
	   Molecular Segment contains a Seq ID and
	   the Marker is associated with the Seq ID
	     Please review the relationship(s) between the deleted Marker and its Seq IDs.
	     These relationships may no longer be appropriate.

SEQ_Sequence_create.object
	1) Disallow *any* deletion

VOC_Evidence_create.object
	1) If there are no more Evidence records for this Annotation, 
	   then delete the Annotation record as well

insert (32)
===========

ALL_Allele_Mutation_create.object:for insert, update
GXD_AllelePair_create.object:for insert, update
GXD_GelRow_create.object
GXD_InSituResult_create.object:for insert, update
MGI_Reference_Assoc_create.object:for insert, update
MGI_Synonym_create.object:for insert, update
MRK_Notes_create.object:for insert, update
PRB_Source_create.object
VOC_Evidence_create.object:for insert, update
	1) same as MODIFY

BIB_Refs_create.object
GXD_Antibody_create.object
GXD_Antigen_create.object
GXD_Genotype_create.object
IMG_Image_create.object
MGI_Organism_create.object
PRB_Probe_create.object
	1) accession ids

ALL_Allele_create.object
GXD_Assay_create.object
GXD_Structure_create.object
MLD_Expts_create.object
NOM_Marker_create.object
PRB_Strain_create.object
VOC_Term_create.object
	1) accession ids (but has other things in trigger as well)

ACC_Accession_create.object		
	1) For Nucleotide Sequences, check that it is valid
             Invalid Nucleotide Sequence Accession Number:
	     Number must be single uppercase letter + 5 numbers OR 
               2 uppercase letters + 6 numbers.

	2) If adding Sequence ID for Molecular Segment 
           and the same Sequence ID exists for one of the Segment's Markers:
	     Sequence IDs for Marker(s) encoding this segment do not exist for all encodes relationships specified.
    	     Some Sequence ids might need to be added.

	3) If adding the Sequence for a Marker 
           and the same ID exists for another Marker:
	     The Accession ID 'xxx' is associated with another Marker.

	4) If inserting a Jax Registry ID for a Strain 
           and the same ID exists for another Strain:
	     The Accession ID 'xxx' is associated with another Strain.

	5) For Marker/Probe/Nomen where 
             ldb in (GenBank, SWISSProt, RefSeq, DFCI, DoTS, TrEMBL, NIA Mouse Gene Index),
           if the sequence has already been associated with an allele (via the ALO load):
	     Sequence is already associated with an allele by the ALO load; 
             cannot also associate it with a marker

	6) nomenclature permissions

ALL_Allele_create.object
	1) accession ids

	2) allele permissions

	3) Cannot use the Autoload status

	4) Approved Alleles must have a valid MGD Marker, unless they are
 	   gene trap alleles (which can have no marker)

ALL_Marker_Assoc_create.object
	1) if we already have an associated marker for the allele, then bail out;
           we can only have one marker per allele currently

	2) if the allele already has a nomenSymbol marker, then bail out; this
           would also essentially be a second marker association

GXD_Assay_create.object
	1) accession ids

	2) BIB_DataSet_Assoc: insert 'Expression' data set for given reference

GXD_Index_create.object
	1) same as MODIFY

	2) BIB_DataSet_Assoc: insert 'Expression' data set for given reference

GXD_Structure_create.object
	1) accession ids

	2) Ensure that _Parent_key of inserted exists as a _Structure_key and
           that parent has the same _Stage_key as inserted, if _Parent_key != NULL

	3) if the assumption doesn't hold, then the following query will set the
           current child's treeDepth


	4) /* find out the depth of the parent structure */

	5) /* update the inserted node */

	6) /* incrementally modify the closure */

	7) _Parent_key will be null for an immediate child of a stage root,
   	   this node, by definition will not have any entries in the closure table,
   	   since it is a root node as far as the database is concerned 

GXD_StructureName_create.object
	1) ensure that the structure specified exists 

	2) look for duplicate (structure key, structure) tuples 

	3) Prevent two children from having the same preferred name 

	4) call stored procedure that recalculates printNames, if a preferred
   	   structure name is changed.  Preferred StructureNames are those
   	   that are referred to by a record in GXD_Structure 

MRK_Marker_create.object
	1) For Mouse Organism, create Accession #, Current Symbol records

	2) For Genes only, create GO_Tracking

	3) For Genes only, create wild type

NOM_Marker_create.object
	1) accession ids

	2) permissions

	3) For Nucleotide Sequences, check that it is valid...

PRB_Marker_create.object		auot-e/null/'H'/'P'
	1) accession ids

	2) Cannot annotate using the Auto-E reference

	3) Relationship cannot be null

	4) Relationship must be 'H' for Probes of non-mouse source

	5) Relationship 'P' can only be used during an EST bulk load

PRB_Strain_create.object
	1) accession ids if standard = 1

	2) Potential Duplicate Strain Found

VOC_Annot_create.object			check isObsolete
	1) Cannot Annotate to an Obsolete Term.

VOC_Term_create.object
	1) accession ids

update (29)
===========
ACC_Accession_create.object
	1) For Nucleotide Sequences, check that it is valid
             Invalid Nucleotide Sequence Accession Number:
	     Number must be single uppercase letter + 5 numbers OR 
               2 uppercase letters + 6 numbers.

	2) If updating Sequence ID for Molecular Segment 
           and the same Sequence ID exists for one of the Segment's Markers:
	     Please review the relationship(s) between the Sequence ID 'xxx' 
             and the Molecular Segment's Marker(s).  
             These relationships may no longer be appropriate.

	3) If updating the Sequence ID for a Marker 
           and the same Sequence ID exists for one of the Marker's Segments:
	     Please review the relationship(s) between the Sequence ID 'xxx' 
             and its Molecular Segments.  
             These relationships may no longer be appropriate.

	4) If updating the Sequence for a Marker 
           and the same ID exists for another Marker:
	     The Accession ID 'xxx' is associated with another Marker.

	5) If updating a Jax Registry ID for a Strain 
           and the same ID exists for another Strain:
	     The Accession ID 'xxx' is associated with another Strain.

	6) For Marker/Probe/Nomen where 
             ldb in (GenBank, SWISSProt, RefSeq, DFCI, DoTS, TrEMBL, NIA Mouse Gene Index),
           if the sequence has already been associated with an allele (via the ALO load):
	     Sequence is already associated with an allele by the ALO load; 
             cannot also associate it with a marker

	7) nomenclature permissions

	8) If max J: in Acc table does not equal max J: in max table, then re-set max J: in max table

ALL_Allele_create.object
	1) allele permissions

	2) GO check: approved/autoload
	     You cannot change the Allele status from Approved/Autoload to Deleted, Reserved or Pending.
	     This Allele is cross-referenced to a GO annotation.

	3) Non-Approved Alleles cannot have Genotypes or Strain associations

	4) If updating symbol, set needsReview flag for Strain 

ALL_Allele_Mutation_create.object
	1) allele permissions

ALL_CellLine_create.object
	1) allele permissions

	2) if the strain is updated, then...
		1. if this is a mutant cell line, disallow it and rollback
		2. if this is a parent cell line, propagate the new cell line to all
		   mutant cell lines derived form this parent

	3) If a mutant cell line has a change in its derivation key, 
	   then its strain key must change to match the strain of its new parent cell line.

ALL_CellLine_Derivation_create.object	
	1) allele permissions

	2) if we update the derivation's parent cell line, then we need to propagate
	   the new parent's strain down to all of the mutant cell lines using citing
	   this derivation

ALL_Marker_Assoc_create.object		
	1) if the allele already has a nomenSymbol marker, then bail out; this
	   would also essentially be a second marker association

	2) if we change the allele or marker keys, then we need to invalidate the
	   prior cached relationships and cache the new ones (as long as the new
	   ones were not invalidated by a curator).  similar process should work
	   for changes to the status key.

GXD_AllelePair_create.object		
	1) Pair State error checks
	     a) State Attribute Error:  Homozygous state is not valid.
	     b) State Attribute Error:  Heterozygous state is not valid.
	     c) State Attribute Error:  Hemizygous X-linked state is not valid.
	     d) State Attribute Error:  Hemizygous Y-linked state is not valid.
	     e) State Attribute Error:  Hemizygous Insertion state is not valid.
	     f) State Attribute Error:  Hemizygous Deletion state is not valid.
	     g) State Attribute Error:  Indeterminate state is not valid.

	2)  Compound error checks
	     a) Compound Attribute Error:  Allele 2 for all Compound Allele Pairs must be null or wild type.
	     b) Allele Compound Error:  Top/Bottom compound is not valid for Hemi-X, Hemi-Y or Indeterminate states.

GXD_Assay_create.object
	1) Update Expression Cache for Assay
	   The update of a GXD_Assay record should be called AFTER any updates to GXD detail records

GXD_GelRow_create.object
	1) If Gel Row Size is entered, Gel Row Units must be specified.

GXD_Index_create.object
	1) if updating priority/conditional mutant, 
	   then set priority/condiational mutant for all said references

GXD_InSituResult_create.object
	1) If Strength is "Absent", then Pattern must be "Not Applicable".

	2) If Pattern is "Not Applicable", then Strength must be "Absent".

GXD_Structure_create.object
	1) make certain that printStop bits don't get cleared on Structures
	   that are children of the Stage root nodes

	2) recalculate printnames on those structures where printStop has been changed

GXD_StructureName_create.object
	1) GXD_StructureName_Update: Non-existent Structure in StructureName record

	2) GXD_StructureName_Update: Inserted StructureName has duplicate structure attribute

	3) call stored procedure that recalculates printNames, if a preferred
	   structure name is changed.  Preferred StructureNames are those
	   that are referred to by a record in GXD_Structure

IMG_Image_create.object
	1) be sure to update IMG_Cache with any cached values that changed

	2) if updating a thumbnail:
	   Each image has at most one thumbnail, so if we removed a
	   thumbnail, then we are safe to just delete the cached
	   records for that image.  (An image cannot be in the cache
	   table without a thumbnail.)

           If we changed a thumbnail, then go ahead and update the
           cached records.

	3) Update Expression Cache for Assay by Reference 
           this is turned off, because it is very rare 
           for a curator to remove a pix id from an image 
           after the assay has been added 
           but if this becomes common, then this call can be turned on 

IMG_ImagePane_create.object		
	1) be sure to update IMG_Cache when a paneLabel is changed

MGI_Reference_Assoc_create.object
	1) nomenclature permissions

MGI_Synonym_create.object
	1) allele permissions

MRK_Notes_create.object
	1) marker clip permission

MLD_Expt_Marker_create.object
	1) Propagate modification of Marker to experiment tables

MRK_Marker_create.object
	1) If no Current symbol exists for the Marker, then abort

	2) If updating symbol or organism:
	      exec ALL_convertAllele
	      exec NOM_updateReserved

	3) for non-mouse species ....
           for mouse we have to be careful because of nomenclature events...
	      exec MRK_reloadLabel

	4) If updating chromosome and changing from unknown to known, update offset to -1

NOM_Marker_create.object
	1) if updating symbol:
             NOM_Marker_Update:  Duplicate. Symbol Already Exists in Nomen.
	     NOM_Marker_Update:  Duplicate. Symbol Already Exists in MGD.

	2) permissions

	3) If the modification date is the ONLY field being updated, then let anyone update it
	   else, permissions

PRB_Marker_create.object
	1) Cannot annotate using the Auto-E reference

	2) Relationship cannot be changed from non-null to null

	3) Relationship must be 'H' for Probes of non-mouse source

	4) Allow update of 'P' to other relationship 
	   Disallow update of other relationship to 'P' 
	   Only check on individual inserts 

	5) If updating to an non-encoding Marker for a Molecular Segment and 
	   Molecular Segment contains a Seq ID and 
	   the Marker is associated with the Seq ID 

	6) Propagate changes to _Marker_key to RFLV tables

PRB_Probe_create.object
	1) if updating source:
		Delete orphan Anonymous _Source_keys
		Update _Source_key for all children of Parent

PRB_Reference_create.object
	1) update the accession reference that is attached to this J: 

PRB_Source_create.object
	1) Restrict edits to Sequence Source Organism

	2) Separate agePrefix from ageSuffix (numerics)

	3) If age is one of the following prefixes, then there can be no numeric values

	4) If age is one of the following prefixes, then there must be numeric values

PRB_Strain_create.object

	1) Potential Duplicate Strain Found

	2) if changing Strain from public to private, 
	   then the Strain cannot be cross-referenced to any other data set

	3) if changing Strain from "nonstandard" to "standard" and no MGI Acc ID exists
	   for the Strain, then create it

VOC_Annot_create.object
	1) propagate modification date and modified by to all evidence records */
	   when the annotation term is modified. (TR 5721) */

VOC_AnnotType_create.object
	1) Vocab Annotation Type is referenced in Vocab Annotation Record(s)

VOC_Evidence_create.object
	1) /* TR 7865: Disallow Annotation if adding an Annotation to an "unknown" term (120, 1098, 6113) */
	   /* and an Annotation to a known Term in the same DAG already exists */
	   /* If the Annotation to a known Term is to */
	   /* J:72247 (InterPro) */
	   /* J:60000 (Swiss-Prot) */
	   /* J:72245 (Swiss-Prot) */
	   /* J:80000 (RIKEN) */
	   /* J:56000 */
	   /* then it's okay */

	      This Object has already been annotated to this DAG.
	      Therefore, you cannot annotate it to an unknown term

	2) If the new Object is already annotated to an unknown term in the same DAG
	   then delete the Annotation to the unknown term.
             determine if the same Object contains an Annotation to an unknown Term 
             within the same DAG */

	3) if this is a GO annotation, then remove the NOGO designation for the reference


	4) if this an MP annotation                       
	   and the evidence code = CUR                    
	   and the Reference is associated with an Allele 
	   then change the Allele Reference to "Used-CUR"  

	5) if this an MP annotation                       
	   and the evidence code != CUR                    
	   and the Reference is associated with an Allele 
	   then change the Allele Reference to "Used-FC"  

