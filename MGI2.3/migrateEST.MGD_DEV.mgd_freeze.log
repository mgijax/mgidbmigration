Server: MGD_DEV
Database: mgd_freeze
Fri Nov  5 10:58:20 EST 1999

1> 
2> /* R. Palazola */
3> /* 7/12/1999   */
4> /* SQL commands to handle the migration for EST consolidation.  */
5> 
6> /* sqsh -S MGD_DEV -L MGD=mgi_release -L blockSize=10000 -e \   */
7> /*      -a 2 -i migrateEST.sql |& tee logfile                      */
8> 
9> /****************************************************************************/
10> /*                                                                          */
11> /* run any pre-migration report select statments prior to this script!      */
12> /*                                                                          */
13> /****************************************************************************/
14> 
15> use mgd_freeze
1> 
2> /*
3> set noexec on
4> set parseonly on
5> */
1> 
2> select started=getdate() 
3> into tempdb..startMigration
(1 row affected)
1> select "Database=mgd_freeze", "Server=" + @@servername, started 
2> from tempdb..startMigration
                                                           started            
 ------------------- ------------------------------------- -------------------
 Database=mgd_freeze Server=                               Nov  5 1999 10:58AM

(1 row affected)
1> 
2> print ""
3> print "Remove all Putative relationships"
4> delete from PRB_Marker where relationship = 'P'
 
Remove all Putative relationships
(168485 rows affected)
1> 
2> 
3> print ""
4> print "Change 'free-standing' ESTs to cDNAs"
 
Change 'free-standing' ESTs to cDNAs
1> select _Probe_key into #estList
2> from PRB_Probe
3> where DNAType = "EST"
4> and derivedFrom is NULL
(540 rows affected)
1> update PRB_Probe
2> set DNAType = "cDNA"
3> from PRB_Probe p, #estList e
4> where p._Probe_key = e._Probe_key
(540 rows affected)
1> 
2> print ""
3> print "Remove all dbEST IDs for WashU ESTs:"
 
Remove all dbEST IDs for WashU ESTs:
1> 
2> select "accum. time"=
3>        datediff ( ss, started, getdate() )
4>        from tempdb..startMigration
5> 
6> drop table #estList
 accum. time
 -----------
         134

(1 row affected)
1> 
2> select _Accession_key
3> into #acckeys
4> from ACC_Accession a, PRB_Probe p
5> where _MGIType_key = 3
6> and _LogicalDB_key = 14  /* dbEST */
7> and a._Object_key = p._Probe_key
8> and p.DNAType = 'EST'
9> and p.name in ( 'WashU/HHMI Mouse EST', 'Withdrawn EST' )
(161526 rows affected)
1> 
2> declare acckey cursor
3> for select _Accession_key from #acckeys
4> for read only
1> 
2> open acckey
1> 
2> set nocount on
1> 
2> declare @key int, @cnt int, @total int, @cursorCnt int
3> select @cnt = 0, @total = 0
4> fetch acckey into @key
5> while ( @@sqlstatus = 0 )
6> BEGIN
7>     begin transaction
8>     delete from ACC_Accession where _Accession_key = @key
9>     if ( @@error = 0 )
10>       BEGIN
11>         commit transaction
12>         select @cnt = @cnt + 1
13>       END
14>     else
15>       BEGIN
16>         print "Delete dbEST Accession IDs failed at key %1!", @key
17>         rollback transaction
18>         return
19>       END
20> 
21>     fetch acckey into @key
22>     if ( @cnt = 25000 or @@sqlstatus > 0)
23>       BEGIN
24>         select @total = @total + @cnt
25>         print "%1! dbEST accession IDs deleted (total %2!).", @cnt, @total
26>         select @cnt = 0
27>         dump transaction mgd_freeze with no_log
28>       END
29> END
30> if @@sqlstatus = 1
31>     print "Cursor Failed"
32> print "TOTAL: %1! dbEST accession IDs deleted.", @total
25000 dbEST accession IDs deleted (total 25000).
25000 dbEST accession IDs deleted (total 50000).
25000 dbEST accession IDs deleted (total 75000).
25000 dbEST accession IDs deleted (total 100000).
25000 dbEST accession IDs deleted (total 125000).
25000 dbEST accession IDs deleted (total 150000).
11526 dbEST accession IDs deleted (total 161526).
TOTAL: 161526 dbEST accession IDs deleted.
1> 
2> select "accum. time"=
3>        datediff ( ss, started, getdate() )
4>        from tempdb..startMigration
 accum. time
 -----------
        1627
1> 
2> close acckey
1> deallocate cursor acckey
1> 
2> drop table #acckeys
3> dump transaction mgd_freeze with no_log
4> set nocount off
1> 
2> print ""
3> print "EST References"
 
EST References
1> select p._Probe_key, p.derivedFrom, r._Refs_key, r.hasSequence
2> into #estRef
3> from PRB_Probe p, PRB_Reference r
4> where p._Probe_key = r._Probe_key
5> and p.DNAType = "EST"
(783 rows affected)
1> 
2> print ""
3> print "Set clones' hasSequence bit where the ESTs' value is 'true'"
 
Set clones' hasSequence bit where the ESTs' value is 'true'
1> update PRB_Reference
2> set hasSequence = 1
3> from PRB_Reference cR, #estRef e
4> where e.derivedFrom = cR._Probe_key
5>       and e._Refs_key = cR._Refs_key
6>       and e.hasSequence = 1 
7>       and cR.hasSequence = 0
(6 rows affected)
1> 
2> print ""
3> print "Remove matching existing clone references"
 
Remove matching existing clone references
1> delete #estRef
2> from #estRef e, PRB_Reference r
3> where e._Refs_key = r._Refs_key
4> and e.derivedFrom = r._Probe_key
(687 rows affected)
1> 
2> print ""
3> print "Reassociate remaining EST references w/ the clone record"
 
Reassociate remaining EST references w/ the clone record
1> update PRB_Reference 
2> set _Probe_key = e.derivedFrom
3> from #estRef e, PRB_Reference r
4> where e._Refs_key = r._Refs_key
5> and e._Probe_key = r._Probe_key
(96 rows affected)
1> 
2> drop table #estRef
1> 
2> dump transaction mgd_freeze with no_log
1> 
2> print ""
3> print "Remove all remaining EST Reference records"
 
Remove all remaining EST Reference records
1> delete PRB_Reference 
2> from PRB_Reference pr, PRB_Probe p
3> where p._Probe_key = pr._Probe_key
4> and p.DNAType = "EST"
(687 rows affected)
1> 
2> dump transaction mgd_freeze with no_log
1> 
2> print ""
3> print "Get list of withdrawn ESTs"
 
Get list of withdrawn ESTs
1> select est_key = _Probe_key, clone_key = derivedFrom
2> into #wdEST
3> from PRB_Probe
4> where DNAType = "EST"
5> and name = "Withdrawn EST"
(4281 rows affected)
1> 
2> print ""
3> print "Delete the withdrawn ESTs"
 
Delete the withdrawn ESTs
1> delete PRB_Probe
2> from PRB_Probe p, #wdEST wd 
3> where wd.est_key = p._Probe_key 
(4281 rows affected)
1> 
2> dump transaction mgd_freeze with no_log
1> 
2> 
3> print ""
4> print "Are any of those clones associated with other probes?"
 
Are any of those clones associated with other probes?
1> if exists (select 1 from #wdEST wd, PRB_Probe p
2> where p.derivedFrom = wd.clone_key )
3>   BEGIN
4>     select "Withdrawn Clone" = accID
5>     from ACC_Accession a, #wdEST wd, PRB_Probe p
6>     where a._Object_key = wd.clone_key
7>     and a._MGIType_key = 3 and a._LogicalDB_key = 1
8>     and p.derivedFrom = wd.clone_key
9> 
10>     delete #wdEST
11>     from ACC_Accession a, #wdEST wd, PRB_Probe p
12>     where a._Object_key = wd.clone_key
13>     and a._MGIType_key = 3 and a._LogicalDB_key = 1
14>     and p.derivedFrom = wd.clone_key
15>   END
16> else
17>     select "None"
     
 ----
 None

(1 row affected)
1> 
2> print ""
3> print "Protect any withdrawn clones that have references attached"
 
Protect any withdrawn clones that have references attached
1> delete #wdEST
2> from #wdEST w
3> where exists ( select 1 
4> from PRB_Reference r 
5> where w.clone_key = r._Probe_key
6> )
(3 rows affected)
1> 
2> print ""
3> print "Delete the remaining 'orphaned' withdrawn clones"
 
Delete the remaining 'orphaned' withdrawn clones
1> delete PRB_Probe
2> from PRB_Probe p, #wdEST wd
3> where p._Probe_key = wd.clone_key
(4211 rows affected)
1> 
2> dump transaction mgd_freeze with no_log
1> 
2> 
3> drop table #wdEST
1> 
2> print ""
3> print "Reassign EST Acc IDs to the parental clone:"
 
Reassign EST Acc IDs to the parental clone:
1> 
2> select "accum. time"=
3>        datediff ( ss, started, getdate() )
4>        from tempdb..startMigration
 accum. time
 -----------
        1678

(1 row affected)
1> 
2> /* only the WashU ESTs should be left */
3> print "Reassign MGI:#s..."
Reassign MGI:#s...
1> 
2> select _Accession_key, p.derivedFrom, preferred, accID
3> into #mgiAccs
4> from ACC_Accession a, PRB_Probe p
5> where prefixPart = "MGI:"
6> and _MGIType_key = 3 
7> and _LogicalDB_key = 1
8> /* get em all: and preferred = 1 */
9> and _Object_key = _Probe_key
10> and p.DNAType = "EST"
(364137 rows affected)
1> 
2> /* report any non-preferred that will appear to mess up the count */
3> 
4> create unique index mgiAccIndex on #mgiAccs ( _Accession_key )
5> print  "Non-preferred MGI:#'s for ESTs"
6> select accID 
7> from #mgiAccs where preferred = 0
8> compute count (accID)
Non-preferred MGI:#'s for ESTs
 accID                         
 ------------------------------
 MGI:1334614                   
 count                         
 ==============================
                              1

(2 rows affected)
1> 
2> set nocount on
3> 
4> declare @minKey int, @maxKey int, @blockKey int, @total int,
5> @err int, @cnt int
6> select @minKey = min(_Accession_key),
7>        @maxKey = max(_Accession_key),
8> 	   @total = 0
9> from #mgiAccs
10> while @minKey <= @maxKey
11>   BEGIN
12>     select @blockKey = @minKey + 25000 - 1
13>     print  "Current block: %1! %2!", @minKey, @blockKey
14>     begin transaction
15> 	update ACC_Accession 
16> 	set _Object_key = derivedFrom, preferred = 0
17> 	from ACC_Accession a, #mgiAccs m
18> 	where a._Accession_key = m._Accession_key
19>     and m._Accession_key between @minKey and @blockKey
20> 
21> 	select @err=@@error, @cnt = @@rowcount
22> 	print "%1! rows affected", @cnt
23>     if ( @err != 0 )
24>       BEGIN
25>         rollback transaction
26>         return
27>       END
28>     else
29> 	  BEGIN
30> 	    select @total = @total + @cnt
31>         commit transaction
32> 	  END
33> 
34>     select @minKey = @blockKey + 1
35>     dump transaction mgd_freeze with no_log
36>   END
37> print "TOTAL: %1! MGI Accession IDs reassigned to clone", @total
Current block: 269301 294300
1436 rows affected
Current block: 294301 319300
3571 rows affected
Current block: 319301 344300
2715 rows affected
Current block: 344301 369300
3572 rows affected
Current block: 369301 394300
3571 rows affected
Current block: 394301 419300
3572 rows affected
Current block: 419301 444300
2342 rows affected
Current block: 444301 469300
3572 rows affected
Current block: 469301 494300
3571 rows affected
Current block: 494301 519300
3540 rows affected
Current block: 519301 544300
3572 rows affected
Current block: 544301 569300
3571 rows affected
Current block: 569301 594300
3572 rows affected
Current block: 594301 619300
3571 rows affected
Current block: 619301 644300
3572 rows affected
Current block: 644301 669300
3571 rows affected
Current block: 669301 694300
3571 rows affected
Current block: 694301 719300
3572 rows affected
Current block: 719301 744300
3571 rows affected
Current block: 744301 769300
3572 rows affected
Current block: 769301 794300
3571 rows affected
Current block: 794301 819300
3572 rows affected
Current block: 819301 844300
3571 rows affected
Current block: 844301 869300
3571 rows affected
Current block: 869301 894300
3642 rows affected
Current block: 894301 919300
3577 rows affected
Current block: 919301 944300
3670 rows affected
Current block: 944301 969300
3679 rows affected
Current block: 969301 994300
3571 rows affected
Current block: 994301 1019300
3571 rows affected
Current block: 1019301 1044300
3572 rows affected
Current block: 1044301 1069300
3571 rows affected
Current block: 1069301 1094300
3572 rows affected
Current block: 1094301 1119300
3571 rows affected
Current block: 1119301 1144300
3595 rows affected
Current block: 1144301 1169300
3571 rows affected
Current block: 1169301 1194300
3571 rows affected
Current block: 1194301 1219300
3663 rows affected
Current block: 1219301 1244300
3787 rows affected
Current block: 1244301 1269300
3674 rows affected
Current block: 1269301 1294300
3915 rows affected
Current block: 1294301 1319300
4166 rows affected
Current block: 1319301 1344300
4167 rows affected
Current block: 1344301 1369300
4167 rows affected
Current block: 1369301 1394300
4166 rows affected
Current block: 1394301 1419300
1626 rows affected
Current block: 1419301 1444300
3425 rows affected
Current block: 1444301 1469300
5000 rows affected
Current block: 1469301 1494300
5000 rows affected
Current block: 1494301 1519300
5000 rows affected
Current block: 1519301 1544300
5000 rows affected
Current block: 1544301 1569300
5000 rows affected
Current block: 1569301 1594300
5030 rows affected
Current block: 1594301 1619300
5000 rows affected
Current block: 1619301 1644300
5000 rows affected
Current block: 1644301 1669300
5000 rows affected
Current block: 1669301 1694300
5000 rows affected
Current block: 1694301 1719300
5000 rows affected
Current block: 1719301 1744300
5000 rows affected
Current block: 1744301 1769300
5000 rows affected
Current block: 1769301 1794300
4999 rows affected
Current block: 1794301 1819300
5000 rows affected
Current block: 1819301 1844300
5000 rows affected
Current block: 1844301 1869300
5000 rows affected
Current block: 1869301 1894300
4035 rows affected
Current block: 1894301 1919300
1599 rows affected
Current block: 1919301 1944300
5000 rows affected
Current block: 1944301 1969300
5000 rows affected
Current block: 1969301 1994300
5000 rows affected
Current block: 1994301 2019300
5000 rows affected
Current block: 2019301 2044300
5090 rows affected
Current block: 2044301 2069300
5209 rows affected
Current block: 2069301 2094300
5000 rows affected
Current block: 2094301 2119300
5000 rows affected
Current block: 2119301 2144300
5000 rows affected
Current block: 2144301 2169300
5355 rows affected
Current block: 2169301 2194300
4808 rows affected
Current block: 2194301 2219300
5012 rows affected
Current block: 2219301 2244300
596 rows affected
Current block: 2244301 2269300
0 rows affected
Current block: 2269301 2294300
0 rows affected
Current block: 2294301 2319300
0 rows affected
Current block: 2319301 2344300
0 rows affected
Current block: 2344301 2369300
0 rows affected
Current block: 2369301 2394300
4139 rows affected
Current block: 2394301 2419300
233 rows affected
Current block: 2419301 2444300
5064 rows affected
Current block: 2444301 2469300
5527 rows affected
Current block: 2469301 2494300
4642 rows affected
Current block: 2494301 2519300
5142 rows affected
Current block: 2519301 2544300
5104 rows affected
Current block: 2544301 2569300
4671 rows affected
Current block: 2569301 2594300
5082 rows affected
Current block: 2594301 2619300
6398 rows affected
Current block: 2619301 2644300
1449 rows affected
Current block: 2644301 2669300
2 rows affected
TOTAL: 364137 MGI Accession IDs reassigned to clone
1> 
2> select "accum. time"=
3>        datediff ( ss, started, getdate() )
4>        from tempdb..startMigration
5> set nocount off
 accum. time
 -----------
        2745
1> 
2> 
3> drop table #mgiAccs
1> 
2> print "Reassign foreign accession IDs to clones..."
Reassign foreign accession IDs to clones...
1> 
2> select _Accession_key, p.derivedFrom
3> into #fAccs
4> from ACC_Accession a, PRB_Probe p
5> where _MGIType_key = 3 
6> and _LogicalDB_key > 1
7> and _Object_key = _Probe_key
8> and p.DNAType = "EST"
(728143 rows affected)
1> 
2> create unique index fAccIndex on #fAccs (_Accession_key)
1> 
2> set nocount on
1> 
2> declare @minKey int, @maxKey int, @blockKey int, @total int,
3> @err int, @cnt int
4> select @minKey = min(_Accession_key),
5>        @maxKey = max(_Accession_key),
6> 	   @total = 0
7> from #fAccs
8> while @minKey <= @maxKey
9>   BEGIN
10>     select @blockKey = @minKey + 25000 - 1
11>     print  "Current block: %1! %2!", @minKey, @blockKey
12>     begin transaction
13> 	update ACC_Accession 
14> 	set _Object_key = derivedFrom
15> 	from ACC_Accession a, #fAccs f
16> 	where a._Accession_key = f._Accession_key
17>     and f._Accession_key between @minKey and @blockKey
18> 
19> 	select @err=@@error, @cnt=@@rowcount
20> 	print "%1! rows affected", @cnt
21>     if ( @err != 0 )
22>       BEGIN
23>         rollback transaction
24>         return
25>       END
26>     else
27> 	  BEGIN
28> 	    select @total = @total + @cnt
29>         commit transaction
30> 	  END
31> 
32>     select @minKey = @blockKey + 1
33>     dump transaction mgd_freeze with no_log
34>   END
35> print "TOTAL: %1! foreign Accession IDs reassigned to clone", @total
Current block: 269302 294301
2871 rows affected
Current block: 294302 319301
7137 rows affected
Current block: 319302 344301
5428 rows affected
Current block: 344302 369301
7144 rows affected
Current block: 369302 394301
7142 rows affected
Current block: 394302 419301
7140 rows affected
Current block: 419302 444301
4683 rows affected
Current block: 444302 469301
7142 rows affected
Current block: 469302 494301
7137 rows affected
Current block: 494302 519301
7077 rows affected
Current block: 519302 544301
7138 rows affected
Current block: 544302 569301
7141 rows affected
Current block: 569302 594301
7141 rows affected
Current block: 594302 619301
7139 rows affected
Current block: 619302 644301
7139 rows affected
Current block: 644302 669301
7137 rows affected
Current block: 669302 694301
7137 rows affected
Current block: 694302 719301
7140 rows affected
Current block: 719302 744301
7142 rows affected
Current block: 744302 769301
7141 rows affected
Current block: 769302 794301
7141 rows affected
Current block: 794302 819301
7142 rows affected
Current block: 819302 844301
7142 rows affected
Current block: 844302 869301
7137 rows affected
Current block: 869302 894301
7280 rows affected
Current block: 894302 919301
7152 rows affected
Current block: 919302 944301
7338 rows affected
Current block: 944302 969301
7356 rows affected
Current block: 969302 994301
7141 rows affected
Current block: 994302 1019301
7139 rows affected
Current block: 1019302 1044301
7139 rows affected
Current block: 1044302 1069301
7139 rows affected
Current block: 1069302 1094301
7144 rows affected
Current block: 1094302 1119301
7140 rows affected
Current block: 1119302 1144301
7189 rows affected
Current block: 1144302 1169301
7140 rows affected
Current block: 1169302 1194301
7141 rows affected
Current block: 1194302 1219301
7323 rows affected
Current block: 1219302 1244301
7571 rows affected
Current block: 1244302 1269301
7345 rows affected
Current block: 1269302 1294301
7825 rows affected
Current block: 1294302 1319301
8331 rows affected
Current block: 1319302 1344301
8329 rows affected
Current block: 1344302 1369301
8333 rows affected
Current block: 1369302 1394301
8333 rows affected
Current block: 1394302 1419301
3252 rows affected
Current block: 1419302 1444301
6849 rows affected
Current block: 1444302 1469301
9999 rows affected
Current block: 1469302 1494301
9999 rows affected
Current block: 1494302 1519301
10000 rows affected
Current block: 1519302 1544301
10000 rows affected
Current block: 1544302 1569301
9999 rows affected
Current block: 1569302 1594301
10060 rows affected
Current block: 1594302 1619301
10000 rows affected
Current block: 1619302 1644301
10000 rows affected
Current block: 1644302 1669301
9999 rows affected
Current block: 1669302 1694301
9998 rows affected
Current block: 1694302 1719301
9998 rows affected
Current block: 1719302 1744301
9999 rows affected
Current block: 1744302 1769301
10000 rows affected
Current block: 1769302 1794301
9998 rows affected
Current block: 1794302 1819301
10000 rows affected
Current block: 1819302 1844301
9999 rows affected
Current block: 1844302 1869301
9999 rows affected
Current block: 1869302 1894301
8070 rows affected
Current block: 1894302 1919301
3198 rows affected
Current block: 1919302 1944301
10000 rows affected
Current block: 1944302 1969301
10000 rows affected
Current block: 1969302 1994301
9999 rows affected
Current block: 1994302 2019301
10000 rows affected
Current block: 2019302 2044301
10179 rows affected
Current block: 2044302 2069301
10419 rows affected
Current block: 2069302 2094301
10000 rows affected
Current block: 2094302 2119301
10000 rows affected
Current block: 2119302 2144301
10000 rows affected
Current block: 2144302 2169301
10709 rows affected
Current block: 2169302 2194301
9616 rows affected
Current block: 2194302 2219301
10024 rows affected
Current block: 2219302 2244301
1192 rows affected
Current block: 2244302 2269301
0 rows affected
Current block: 2269302 2294301
0 rows affected
Current block: 2294302 2319301
0 rows affected
Current block: 2319302 2344301
0 rows affected
Current block: 2344302 2369301
0 rows affected
Current block: 2369302 2394301
8278 rows affected
Current block: 2394302 2419301
466 rows affected
Current block: 2419302 2444301
10128 rows affected
Current block: 2444302 2469301
11054 rows affected
Current block: 2469302 2494301
9284 rows affected
Current block: 2494302 2519301
10284 rows affected
Current block: 2519302 2544301
10208 rows affected
Current block: 2544302 2569301
9341 rows affected
Current block: 2569302 2594301
10164 rows affected
Current block: 2594302 2619301
12796 rows affected
Current block: 2619302 2644301
2898 rows affected
Current block: 2644302 2669301
2 rows affected
TOTAL: 728143 foreign Accession IDs reassigned to clone
1> 
2> select "accum. time"=
3>        datediff ( ss, started, getdate() )
4>        from tempdb..startMigration
 accum. time
 -----------
        4838
1> 
2> drop table #fAccs
1> 
2> /* Could this leave any MGI:#'s still attached to ESTs? */
3> print ""
4> print "Accession IDs still associated with ESTs"
 
Accession IDs still associated with ESTs
1> select accID, _LogicalDB_key, preferred
2> from ACC_Accession a, PRB_Probe p
3> where a._MGIType_key = 3
4> and a._Object_key = p._Probe_key
5> and p.DNAType = "EST"
 accID                          _LogicalDB_key preferred
 ------------------------------ -------------- ---------
1> 
2> 
3> dump transaction mgd_freeze with no_log
1> 
2> set nocount off
1> 
2> print ""
3> print "Remove all Notes for ESTs"
 
Remove all Notes for ESTs
1> delete PRB_Notes 
2> from PRB_Notes n, PRB_Probe p
3> where n._Probe_key = p._Probe_key
4> and p.DNAType = "EST"
(8 rows affected)
1> 
2> dump transaction mgd_freeze with no_log
1> 
2> dump transaction tempdb with no_log
1> 
2> print ""
3> print "Migrate EST relationships"
 
Migrate EST relationships
1> 
2> /* determine which Encodes relationships need to be promoted/created */
3> select pm._Probe_key, pm._Marker_key, relationship, p.derivedFrom
4> into #estRel
5> from PRB_Marker pm, PRB_Probe p
6> where p.DNAType = "EST"
7> and pm._Probe_key = p._Probe_key
(765 rows affected)
1> 
2> print ""
3> print "Migrate Encodes relationships where clone has ANY other relationship"
 
Migrate Encodes relationships where clone has ANY other relationship
1> update PRB_Marker
2> set relationship = 'E'
3> from PRB_Marker pm, #estRel e
4> where pm._Probe_key = e.derivedFrom
5> and pm._Marker_key = e._Marker_key
6> and e.relationship = 'E'
7> and ( pm.relationship is NULL or pm.relationship != 'E' )
(0 rows affected)
1> 
2> print ""
3> print "Add Encodes relationships where clone has no relationship to the marker"
 
Add Encodes relationships where clone has no relationship to the marker
1> insert into PRB_Marker ( 
2>        _Probe_key, 
3>        _Marker_key, 
4>        relationship 
5> )
6> select derivedFrom, _Marker_key, relationship
7> from #estRel e
8> where relationship = 'E'
9> /* no existing relationship for the p-m pair */
10> and not exists ( select 1 
11>     from PRB_Marker cpm
12>     where cpm._Probe_key = e.derivedFrom
13>     and cpm._Marker_key = e._Marker_key
14> )
(95 rows affected)
1>     
2> /* clean up the handled Encodes */
3> delete from #estRel
4> where relationship = 'E' 
5> print ""
6> print "EST non-Encodes relationships that were not migrated to clone."
 
(765 rows affected)
EST non-Encodes relationships that were not migrated to clone.
1> 
2> select relationship, count(*)
3> from #estRel
4> group by relationship
 relationship            
 ------------ -----------

(0 rows affected)
1> 
2> drop table #estRel
3> dump transaction mgd_freeze with no_log
1> 
2> dump transaction tempdb with no_log
1> 
2> print ""
3> print "Count of WashU IMAGE clones"
4> select count(distinct derivedFrom)
5> from PRB_Probe
6> where DNAType = "EST"	/* all remaining are WashU ESTs */
7> 
8> print ""
9> print "Remove all ESTs"
 
Count of WashU IMAGE clones
            
 -----------
      349908
 

(1 row affected)
Remove all ESTs
1> select "accum. time"=
2>        datediff ( ss, started, getdate() )
3>        from tempdb..startMigration
 accum. time
 -----------
        4892

(1 row affected)
1> 
2> set nocount on
1> 
2> declare @minKey int, @maxKey int, @blockKey int, @total int,
3> @err int, @cnt int
4> select @minKey = min(_Probe_key),
5>        @maxKey = max(_Probe_key),
6> 		  @total = 0
7> from PRB_Probe
8> while @minKey <= @maxKey
9>   BEGIN
10>     select @blockKey = @minKey + 25000 - 1
11>     print  "Current block: %1! %2!", @minKey, @blockKey
12>     begin transaction
13>     delete from PRB_Probe
14>     where DNAType = "EST"
15>     and _Probe_key between @minKey and @blockKey
16> 
17> 	select @err=@@error, @cnt=@@rowcount
18> 	print "%1! rows affected", @cnt
19>     if ( @err != 0 )
20>       BEGIN
21>         rollback transaction
22>         return
23>       END
24>     else
25> 	  BEGIN
26> 	    select @total = @total + @cnt
27>         commit transaction
28> 	  END
29> 
30>     select @minKey = @blockKey + 1
31>     dump transaction mgd_freeze with no_log
32>   END
33> print "TOTAL: %1! EST records deleted", @total
Current block: 1 25000
0 rows affected
Current block: 25001 50000
0 rows affected
Current block: 50001 75000
4130 rows affected
Current block: 75001 100000
11644 rows affected
Current block: 100001 125000
11271 rows affected
Current block: 125001 150000
12469 rows affected
Current block: 150001 175000
12500 rows affected
Current block: 175001 200000
12500 rows affected
Current block: 200001 225000
12500 rows affected
Current block: 225001 250000
12500 rows affected
Current block: 250001 275000
12500 rows affected
Current block: 275001 300000
12500 rows affected
Current block: 300001 325000
12500 rows affected
Current block: 325001 350000
12499 rows affected
Current block: 350001 375000
12500 rows affected
Current block: 375001 400000
10687 rows affected
Current block: 400001 425000
12500 rows affected
Current block: 425001 450000
12500 rows affected
Current block: 450001 475000
12538 rows affected
Current block: 475001 500000
12500 rows affected
Current block: 500001 525000
12500 rows affected
Current block: 525001 550000
12499 rows affected
Current block: 550001 575000
12500 rows affected
Current block: 575001 600000
9193 rows affected
Current block: 600001 625000
12500 rows affected
Current block: 625001 650000
12874 rows affected
Current block: 650001 675000
12500 rows affected
Current block: 675001 700000
12870 rows affected
Current block: 700001 725000
12510 rows affected
Current block: 725001 750000
13161 rows affected
Current block: 750001 775000
13008 rows affected
Current block: 775001 800000
15282 rows affected
Current block: 800001 825000
1 rows affected
TOTAL: 364136 EST records deleted
1> 
2> select "accum. time"=
3>        datediff ( ss, started, getdate() )
4>        from tempdb..startMigration
5> set nocount off
 accum. time
 -----------
        5387
1> 
2> 
3> /********************************************************************/
4> 
5> /* the following is for TR 611, a sub-project of 554/487.
6>    associate existing foreign accession IDs w/ internal WashU-dbEST 
7>    electronic load reference.
8> */
9> 
10> 
11> select _Accession_key
12> into #accrefs
13> from ACC_Accession
14> where 1=2
15> 
16> select _Object_key, rowID = 0
17> into #clonelist
18> from ACC_Accession
19> where 1 = 2
20> 
21> set nocount off
(0 rows affected)
(0 rows affected)
1> 
2> declare @ref int
3> select @ref = _Object_key from ACC_Accession
4> where accID = "J:57656"
5> 
6> if ( @ref is null )
7> BEGIN
8>  print ""
9>  print "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
10>  print "!   Cannot locate a reference for WashU/dbEST electronic loads.   !"
11>  print "!   ACC_AccessionReference and PRB_Reference records NOT created! !"
12>  print "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
13>  print ""
14> END
15> 
16> else
17> BEGIN
18>   print "Adding Accession-References for EST foreign accession IDs..."
19>   select "accum. time"=
20>        datediff ( ss, started, getdate() )
21>        from tempdb..startMigration
22> 
23>   /* get the _Object_keys for WashU's IMAGE clones */
24>   /* note: we use WashU tags to insure we get only EST-loaded IMAGE clones */
25>   insert into #clonelist
26>   select distinct _Object_key, 0
27>   from ACC_Accession a, PRB_Probe p
28>   where _LogicalDB_key = 16
29>   and _MGIType_key = 3
30>   and _Object_key = _Probe_key
31>   and p.name = 'I.M.A.G.E. clone'
32> 
33>   /* get all the _Accession_key - _Object_key tuples for these clones */
34>   insert into #accrefs 
35>   select _Accession_key
36>   from ACC_Accession a, #clonelist p
37>   where _MGIType_key = 3                     /* Segment */
38>   and a._Object_key = p._Object_key
39>   and _LogicalDB_key in (9, 12, 16, 17)
40> 
41>   dump transaction tempdb with no_log
42> 
43> END
(1 row affected)
Adding Accession-References for EST foreign accession IDs...
 accum. time
 -----------
        5387

(1 row affected)

(349908 rows affected)

(1384060 rows affected)
1> 
2> create unique index accrefs_index   on #accrefs (_Accession_key)
3> create unique index clonelist_index on #clonelist (_Object_key) 
4> set nocount on
1> 
2> /* now generate acc-refs for these */
3> 
4> declare @ref int, @total int, @err int, @cnt int
5> select @total = 0, @ref = _Object_key 
6> from ACC_Accession
7> where accID = "J:57656"
8> 
9> if @ref is not null
10> BEGIN
11>   declare @minKey int, @maxKey int, @blockKey int
12>   select @minKey = min(_Accession_key),
13>          @maxKey = max(_Accession_key)
14>   from #accrefs
15> 
16>   while @minKey <= @maxKey
17>   BEGIN
18>     select @blockKey = @minKey + 25000 - 1
19>     print  "Current block: %1! %2!", @minKey, @blockKey
20>     begin transaction
21> 
22> 	insert into ACC_AccessionReference (_Accession_key, _Refs_key)
23> 	select _Accession_key, @ref
24> 	from #accrefs
25> 	where _Accession_key between @minKey and @blockKey
26> 
27> 	select @err=@@error, @cnt=@@rowcount
28> 	print "%1! rows affected", @cnt
29>     if ( @err != 0 )
30>       BEGIN
31>         rollback transaction
32>         return
33>       END
34>     else
35> 	  BEGIN
36> 		select @total = @total + @cnt
37>         commit transaction
38> 	  END
39> 
40>     select @minKey = @blockKey + 1
41>     dump transaction mgd_freeze with no_log
42>   END
43> END
44> print "TOTAL: %1! AccessionReferences added.", @total
Current block: 269299 294298
5741 rows affected
Current block: 294299 319298
14280 rows affected
Current block: 319299 344298
10859 rows affected
Current block: 344299 369298
14286 rows affected
Current block: 369299 394298
14286 rows affected
Current block: 394299 419298
14282 rows affected
Current block: 419299 444298
9369 rows affected
Current block: 444299 469298
14284 rows affected
Current block: 469299 494298
14280 rows affected
Current block: 494299 519298
14158 rows affected
Current block: 519299 544298
14280 rows affected
Current block: 544299 569298
14285 rows affected
Current block: 569299 594298
14283 rows affected
Current block: 594299 619298
14283 rows affected
Current block: 619299 644298
14281 rows affected
Current block: 644299 669298
14280 rows affected
Current block: 669299 694298
14280 rows affected
Current block: 694299 719298
14282 rows affected
Current block: 719299 744298
14286 rows affected
Current block: 744299 769298
14283 rows affected
Current block: 769299 794298
14285 rows affected
Current block: 794299 819298
14284 rows affected
Current block: 819299 844298
14285 rows affected
Current block: 844299 869298
14280 rows affected
Current block: 869299 894298
14072 rows affected
Current block: 894299 919298
14268 rows affected
Current block: 919299 944298
13986 rows affected
Current block: 944299 969298
13964 rows affected
Current block: 969299 994298
14284 rows affected
Current block: 994299 1019298
14282 rows affected
Current block: 1019299 1044298
14281 rows affected
Current block: 1044299 1069298
14283 rows affected
Current block: 1069299 1094298
14286 rows affected
Current block: 1094299 1119298
14284 rows affected
Current block: 1119299 1144298
14216 rows affected
Current block: 1144299 1169298
14283 rows affected
Current block: 1169299 1194298
14284 rows affected
Current block: 1194299 1219298
14003 rows affected
Current block: 1219299 1244298
13637 rows affected
Current block: 1244299 1269298
13974 rows affected
Current block: 1269299 1294298
13252 rows affected
Current block: 1294299 1319298
12499 rows affected
Current block: 1319299 1344298
12494 rows affected
Current block: 1344299 1369298
12500 rows affected
Current block: 1369299 1394298
12501 rows affected
Current block: 1394299 1419298
4878 rows affected
Current block: 1419299 1444298
10272 rows affected
Current block: 1444299 1469298
14999 rows affected
Current block: 1469299 1494298
14999 rows affected
Current block: 1494299 1519298
15000 rows affected
Current block: 1519299 1544298
15000 rows affected
Current block: 1544299 1569298
14999 rows affected
Current block: 1569299 1594298
15015 rows affected
Current block: 1594299 1619298
15000 rows affected
Current block: 1619299 1644298
15000 rows affected
Current block: 1644299 1669298
14999 rows affected
Current block: 1669299 1694298
14998 rows affected
Current block: 1694299 1719298
14998 rows affected
Current block: 1719299 1744298
14999 rows affected
Current block: 1744299 1769298
15000 rows affected
Current block: 1769299 1794298
14998 rows affected
Current block: 1794299 1819298
15000 rows affected
Current block: 1819299 1844298
14999 rows affected
Current block: 1844299 1869298
14999 rows affected
Current block: 1869299 1894298
12115 rows affected
Current block: 1894299 1919298
4807 rows affected
Current block: 1919299 1944298
15000 rows affected
Current block: 1944299 1969298
15000 rows affected
Current block: 1969299 1994298
14999 rows affected
Current block: 1994299 2019298
15000 rows affected
Current block: 2019299 2044298
15045 rows affected
Current block: 2044299 2069298
15105 rows affected
Current block: 2069299 2094298
15000 rows affected
Current block: 2094299 2119298
15000 rows affected
Current block: 2119299 2144298
15000 rows affected
Current block: 2144299 2169298
15177 rows affected
Current block: 2169299 2194298
14364 rows affected
Current block: 2194299 2219298
14422 rows affected
Current block: 2219299 2244298
23094 rows affected
Current block: 2244299 2269298
25000 rows affected
Current block: 2269299 2294298
25000 rows affected
Current block: 2294299 2319298
25000 rows affected
Current block: 2319299 2344298
25000 rows affected
Current block: 2344299 2369298
25000 rows affected
Current block: 2369299 2394298
16494 rows affected
Current block: 2394299 2419298
19777 rows affected
Current block: 2419299 2444298
15033 rows affected
Current block: 2444299 2469298
15079 rows affected
Current block: 2469299 2494298
13928 rows affected
Current block: 2494299 2519298
14752 rows affected
Current block: 2519299 2544298
14267 rows affected
Current block: 2544299 2569298
13695 rows affected
Current block: 2569299 2594298
13297 rows affected
Current block: 2594299 2619298
15125 rows affected
Current block: 2619299 2644298
2908 rows affected
Current block: 2644299 2669298
6 rows affected
Current block: 2669299 2694298
4 rows affected
TOTAL: 1384060 AccessionReferences added.
1> 
2> select "accum. time"=
3>    datediff ( ss, started, getdate() )
4>    from tempdb..startMigration
 accum. time
 -----------
        7050
1> 
2> drop table #accrefs
1> 
2> /* prepare #clonelist for PRB_Reference records */
3> 
4> declare cloneref cursor
5> for select rowID from #clonelist
6> for update of rowID
1> 
2> open cloneref
1> 
2> declare @row int, @rowID int
3> select @row = max (_Reference_key) from PRB_Reference
4> fetch cloneref into @rowID
5> while ( @@sqlstatus = 0 )
6>   BEGIN
7>     select @row = @row + 1
8>     update #clonelist set rowID = @row
9> 	where current of cloneref
10> 	fetch cloneref into @rowID
11>   END
1> 
2> close cloneref
1> 
2> deallocate cursor cloneref
1> 
2> declare @ref int, @total int, @err int, @cnt int
3> select @total = 0, @ref = _Object_key 
4> from ACC_Accession
5> where accID = "J:57656"
6> 
7> if @ref is not null
8> BEGIN
9>   declare @minKey int, @maxKey int, @blockKey int
10>   select @minKey = min(_Object_key),
11>          @maxKey = max(_Object_key)
12>   from #clonelist
13> 
14>   while @minKey <= @maxKey
15>   BEGIN
16>     select @blockKey = @minKey + 25000 - 1
17>     print  "Current block: %1! %2!", @minKey, @blockKey
18>     begin transaction
19> 
20> 	insert into PRB_Reference (
21> 		_Reference_key,
22>         _Probe_key,
23>         _Refs_key,
24>         holder,
25>         hasRmap,
26>         hasSequence
27>         )
28>     select rowID, 
29>         _Object_key,
30>         @ref,
31>         NULL,
32>         0,
33>         0
34>     from #clonelist
35> 	where _Object_key between @minKey and @blockKey
36> 
37> 	select @err = @@error, @cnt = @@rowcount
38> 	print "%1! rows affected", @cnt
39>     if ( @err != 0 )
40>       BEGIN
41>         rollback transaction
42>         return
43>       END
44>     else
45> 	  BEGIN
46> 	    select @total = @total + @cnt
47>         commit transaction
48> 	  END
49> 
50>     select @minKey = @blockKey + 1
51>     dump transaction mgd_freeze with no_log
52>   END
53> END
54> print "TOTAL: %1! PRB_Reference records added.", @total
Current block: 62478 87477
9513 rows affected
Current block: 87478 112477
11271 rows affected
Current block: 112478 137477
12469 rows affected
Current block: 137478 162477
12500 rows affected
Current block: 162478 187477
12500 rows affected
Current block: 187478 212477
12500 rows affected
Current block: 212478 237477
12500 rows affected
Current block: 237478 262477
12500 rows affected
Current block: 262478 287477
12500 rows affected
Current block: 287478 312477
12500 rows affected
Current block: 312478 337477
12499 rows affected
Current block: 337478 362477
12500 rows affected
Current block: 362478 387477
12500 rows affected
Current block: 387478 412477
10687 rows affected
Current block: 412478 437477
12500 rows affected
Current block: 437478 462477
12462 rows affected
Current block: 462478 487477
12500 rows affected
Current block: 487478 512477
12500 rows affected
Current block: 512478 537477
12500 rows affected
Current block: 537478 562477
12500 rows affected
Current block: 562478 587477
10039 rows affected
Current block: 587478 612477
11654 rows affected
Current block: 612478 637477
12500 rows affected
Current block: 637478 662477
12126 rows affected
Current block: 662478 687477
12490 rows affected
Current block: 687478 712477
11467 rows affected
Current block: 712478 737477
10953 rows affected
Current block: 737478 762477
11829 rows affected
Current block: 762478 787477
10227 rows affected
Current block: 787478 812477
2722 rows affected
TOTAL: 349908 PRB_Reference records added.
1> 
2> select "accum. time"=
3>     datediff ( ss, started, getdate() )
4>     from tempdb..startMigration
5> set nocount off
 accum. time
 -----------
       10233
1> 
2> drop table #clonelist
1> 
2> 
3> /***********************************************************************/
4> 
5> /* Lori plans to create these records in production so the EI can 
6>    use the record keys; the checks for prior existence should prevent
7>    the records from being added where they already exist (UNLESS the
8>    name does not include "UniGene".
9> */
10> 
11> LogicalActual:
12> 
13> /* add needed UniGene Logical/Actual DB records if not present */
14> print "Checking UniGene Logical and Actual DB"
Checking UniGene Logical and Actual DB
1> 
2> declare @ldbkey int
3> select @ldbkey = _LogicalDB_key from ACC_LogicalDB where name like '%UniGene%'
4> if ( @ldbkey is null )
5>   BEGIN
6>     print "Adding UniGene Logical DB."
7>     select @ldbkey=max(_LogicalDB_key)+1 from ACC_LogicalDB
8>     insert into ACC_LogicalDB ( 
9>         _LogicalDB_key, 
10>         name,
11>         description, 
12>         _Species_key
13>         ) 
14>     values ( 
15>         @ldbkey, 
16>         "UniGene",
17>         "UniGene Mus musculus clustering resource",
18>         1
19>         )
20>   END
21> else
22>   print "UniGene Logical DB record already exists"
23> 
24> if not exists (select 1 from ACC_ActualDB where name like '%UniGene%')
25>   BEGIN
26>     print "Adding UniGene Actual DB."
27>     declare @adbkey int
28>     select @adbkey=max(_LogicalDB_key)+1 from ACC_ActualDB
29>     insert into ACC_ActualDB ( 
30>          _ActualDB_key, 
31>          _LogicalDB_key,
32>          name, 
33>          active,
34>          allowsMultiple,
35>          url 
36>          )
37>     values ( 
38>          @adbkey, 
39>          @ldbkey,
40>          "UniGene", 
41>          1,
42>          0,
43>          "http://www.ncbi.nlm.nih.gov/UniGene/clust.cgi?ORG=Mm&CID=@@@@"
44>          )
45>   END
46> else
47>   print "UniGene Actual DB record already exists"
(1 row affected)
UniGene Logical DB record already exists
UniGene Actual DB record already exists
(0 rows affected)
1> 
2> print ""
3> print "REMINDER: update WI's ActualDB file for UniGene entry!!"
4> print ""
 
REMINDER: update WI's ActualDB file for UniGene entry!!
 
1> 
2> drop table tempdb..startMigration
1> 
2> /* 
3> set noexec off
4> set parseonly off
5> */
