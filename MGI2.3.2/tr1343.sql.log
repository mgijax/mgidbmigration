Thu Mar 23 02:31:55 EST 2000
Password: 
1>  
2> use master
1>  
2> sp_dboption mgd, "select into", true
Database option 'select into/bulkcopy/pllsort' turned ON for database 'mgd'.
Run the CHECKPOINT command in the database that was changed.
(return status = 0) 
1>   
2> use mgd
1>    
2> checkpoint
1>  
2> drop table tempdb..MRK_Marker1343
1> 
2> drop table tempdb..HMD_Homology_Marker1343
1> 
2> drop table tempdb..HMD_Homology1343
1> 
2> drop table tempdb..HMD_Homology_Assay1343
1> 
2> drop table tempdb..HMD_Class1343
1> 
2> drop table tempdb..BIB_Refs1343
1> 
2> drop table tempdb..ACC_Accession1343
1> 
2> drop table tempdb..MRK_Species1343
1> 
2> select h._Class_key, m._Marker_key
3> into #all
4> from HMD_Homology h, HMD_Homology_Marker m
5> where h._Homology_key = m._Homology_key
(23737 rows affected)
1> 
2> select *
3> into #single
4> from #all
5> group by _Class_key
6> having count(*) = 1
(0 rows affected)
1> 
2> select * 
3> into #singlereference
4> from HMD_Homology_Marker
5> group by _Homology_key
6> having count(*) = 1
(0 rows affected)
1> 
2> select m.*
3> into #marker
4> from #single s, HMD_Homology h, HMD_Homology_Marker hm, MRK_Marker m
5> where s._Class_key = h._Class_key
6> and h._Homology_key = hm._Homology_key
7> and hm._Marker_key = m._Marker_key
(0 rows affected)
1> 
2> select hm.*
3> into #homologymarker
4> from #single s, HMD_Homology h, HMD_Homology_Marker hm
5> where s._Class_key = h._Class_key
6> and h._Homology_key = hm._Homology_key
7> union
8> select *
9> from #singlereference
(0 rows affected)
1> 
2> select h.*
3> into #homology
4> from #single s, HMD_Homology h
5> where s._Class_key = h._Class_key
6> union
7> select h.*
8> from #singlereference s, HMD_Homology h
9> where s._Homology_key = h._Homology_key
(0 rows affected)
1> 
2> select a.*
3> into #homologyassay
4> from #homology h, HMD_Homology_Assay a
5> where h._Homology_key = a._Homology_key
(0 rows affected)
1> 
2> select c.*
3> into #homologyclass
4> from #single s, HMD_Class c
5> where s._Class_key = c._Class_key
(0 rows affected)
1> 
2> select *
3> into tempdb..MRK_Marker1343
4> from #marker
(0 rows affected)
1> 
2> select *
3> into tempdb..HMD_Homology_Marker1343
4> from #homologymarker
(0 rows affected)
1> 
2> select *
3> into tempdb..HMD_Homology1343
4> from #homology
(0 rows affected)
1> 
2> select *
3> into tempdb..HMD_Homology_Assay1343
4> from #homologyassay
(0 rows affected)
1> 
2> select *
3> into tempdb..HMD_Class1343
4> from #homologyclass
(0 rows affected)
Password: 

Starting copy...

0 rows copied.
Clock Time (ms.): total = 1
Password: 

Starting copy...

0 rows copied.
Clock Time (ms.): total = 1
Password: 

Starting copy...

0 rows copied.
Clock Time (ms.): total = 1
Password: 

Starting copy...

0 rows copied.
Clock Time (ms.): total = 1
Password: 

Starting copy...

0 rows copied.
Clock Time (ms.): total = 1
Password: 
1>  
2> use master
1>  
2> sp_dboption mgd, "select into", true
Database option 'select into/bulkcopy/pllsort' turned ON for database 'mgd'.
Run the CHECKPOINT command in the database that was changed.
(return status = 0) 
1>   
2> use mgd
1>    
2> checkpoint
1>  
2> /* delete single homology classes */
3> 
4> select h._Class_key, m._Marker_key
5> into #homology
6> from HMD_Homology h, HMD_Homology_Marker m
7> where h._Homology_key = m._Homology_key
(23737 rows affected)
1> 
2> select *
3> into #single
4> from #homology
5> group by _Class_key
6> having count(*) = 1
(0 rows affected)
1> 
2> /* save references of classes which will be deleted */
3> 
4> select distinct h._Refs_key
5> into #references1
6> from #single s, HMD_Homology h
7> where s._Class_key = h._Class_key
(0 rows affected)
1> 
2> delete HMD_Class
3> from #single s, HMD_Class c
4> where s._Class_key = c._Class_key
(0 rows affected)
1> 
2> drop table #single
1> 
2> checkpoint
1> 
2> /* delete single homology references */
3> 
4> select * 
5> into #single
6> from HMD_Homology_Marker
7> group by _Homology_key
8> having count(*) = 1
(0 rows affected)
1> 
2> /* save references of classes which will be deleted */
3> 
4> select distinct h._Refs_key
5> into #references2
6> from #single s, HMD_Homology h
7> where s._Homology_key = h._Homology_key
(0 rows affected)
1> 
2> delete HMD_Homology
3> from #single s, HMD_Homology h
4> where s._Homology_key = h._Homology_key
(0 rows affected)
1> 
2> delete HMD_Homology_Marker
3> from #single s, HMD_Homology_Marker h
4> where s._Homology_key = h._Homology_key
(0 rows affected)
1> 
2> checkpoint
1> 
2> /* delete markers with no homologies */
3> 
4> select m._Marker_key, m.symbol, m._Species_key
5> into #markers
6> from MRK_Marker m
7> where _Species_key != 1
8> and not exists (select 1 from HMD_Homology_Marker h
9> where m._Marker_key = h._Marker_key)
(0 rows affected)
1> 
2> delete MRK_Marker
3> from #markers m, MRK_Marker r
4> where m._Marker_key = r._Marker_key
(0 rows affected)
1> 
2> checkpoint
1> 
2> /* delete species with no homologies */
3> 
4> select s.*
5> into #species
6> from MRK_Species s
7> where _Species_key not in (1,2)
8> and not exists (select 1 from HMD_Homology_Marker h, MRK_Marker m
9> where h._Marker_key = m._Marker_key
10> and m._Species_key = s._Species_key)
(0 rows affected)
1> 
2> delete MRK_Species
3> from #species s, MRK_Species p
4> where s._Species_key = p._Species_key
(0 rows affected)
1> 
2> select * into tempdb..MRK_Species1343
3> from #species
(0 rows affected)
1> 
2> checkpoint
1> 
2> /* get references of homologies w/ no marker */
3> 
4> select distinct h._Refs_key
5> into #references3
6> from HMD_Homology h
7> where not exists (select 1 from HMD_Homology_Marker m
8> where h._Homology_key = m._Homology_key)
(0 rows affected)
1> 
2> /* save references for later deletion or revision */
3> 
4> select b.*
5> into tempdb..BIB_Refs1343
6> from #references1 r, BIB_Refs b
7> where r._Refs_key = b._Refs_key
(0 rows affected)
1> 
2> insert into tempdb..BIB_Refs1343
3> select b.*
4> from #references2 r, BIB_Refs b
5> where r._Refs_key = b._Refs_key
6> and not exists (select 1 from tempdb..BIB_Refs1343 t
7> where r._Refs_key = t._Refs_key)
(0 rows affected)
1> 
2> insert into tempdb..BIB_Refs1343
3> select b.*
4> from #references3 r, BIB_Refs b
5> where r._Refs_key = b._Refs_key
6> and not exists (select 1 from tempdb..BIB_Refs1343 t
7> where r._Refs_key = t._Refs_key)
(0 rows affected)
1> 
2> select a.*
3> into tempdb..ACC_Accession1343
4> from tempdb..BIB_Refs1343 b, ACC_Accession a
5> where b._Refs_key = a._Object_key
6> and a._MGIType_key = 1
(0 rows affected)
1> 
2> checkpoint
Password: 

Starting copy...

0 rows copied.
Clock Time (ms.): total = 1
Password: 

Starting copy...

0 rows copied.
Clock Time (ms.): total = 1
Password: 

Starting copy...

0 rows copied.
Clock Time (ms.): total = 1
Password: 
1>  
2> use master
1>  
2> sp_dboption mgd, "select into", true
Database option 'select into/bulkcopy/pllsort' turned ON for database 'mgd'.
Run the CHECKPOINT command in the database that was changed.
(return status = 0) 
1>   
2> use mgd
1>    
2> checkpoint
1> 
2> /* Delete HMD_Homology records w/o HMD_Homology_Marker records */
3> 
4> delete HMD_Homology
5> from HMD_Homology h
6> where not exists (select 1 from HMD_Homology_Marker m
7> where h._Homology_key = m._Homology_key)
(0 rows affected)
1> 
2> /* Delete HMD_Class records w/o HMD_Homology records */
3> 
4> delete HMD_Class
5> from HMD_Class c
6> where not exists (select 1 from HMD_Homology h
7> where c._Class_key = h._Class_key)
(0 rows affected)
1> 
2> /* delete or revise references */
3> 
4> delete BIB_Refs
5> from tempdb..BIB_Refs1343 r, BIB_Refs b
6> where r._Refs_key = b._Refs_key
7> and 
8> (b.dbs = 'Homology'
9> or b.dbs = 'Homology*'
10> or b.dbs = 'Homology/'
11> or b.dbs = 'Homology*/')
12> and not exists
13> (select 1 from HMD_Homology h
14> where r._Refs_key = h._Refs_key)
15> and not exists
16> (select 1 from MRK_Reference h
17> where r._Refs_key = h._Refs_key)
18> and not exists
19> (select 1 from MLC_Reference h
20> where r._Refs_key = h._Refs_key)
(0 rows affected)
1> 
2> declare ref_cursor cursor for
3> select r._Refs_key, r.dbs
4> from tempdb..BIB_Refs1343 r
5> where r.dbs like '%Homology%'
6> and not exists
7> (select 1 from HMD_Homology h
8> where r._Refs_key = h._Refs_key)
9> for read only
1> 
2> declare @refKey integer
3> declare @dbs varchar(60)
4> declare @newdbs varchar(60)
5> declare @idx integer
6> 
7> open ref_cursor
8>  
9>  fetch ref_cursor into @refKey, @dbs
10>    
11>    while (@@sqlstatus = 0)
12>    begin
13> 	select @idx = charindex("Homology*", @dbs)
14> 
15> 	if (@idx > 0)
16> 	begin
17> 		select @newdbs = substring(@dbs, 1, @idx - 1) + 
18> 			substring(@dbs, @idx + char_length("Homology*") + 1, char_length(@dbs))
19> 		update BIB_Refs set dbs = @newdbs where _Refs_key = @refKey
20> 	end
21> 
22> 	else
23> 	begin
24> 	  select @idx = charindex("Homology", @dbs)
25> 	  if (@idx > 0)
26> 	  begin
27> 		select @newdbs = substring(@dbs, 1, @idx - 1) + 
28> 			substring(@dbs, @idx + char_length("Homology") + 1, char_length(@dbs))
29> 		update BIB_Refs set dbs = @newdbs where _Refs_key = @refKey
30> 	  end
31> 	end
32> 
33>  	fetch ref_cursor into @refKey, @dbs
34>    end
35> 
36> close ref_cursor
37> deallocate cursor ref_cursor
(0 rows affected)
1> 
2> checkpoint
Thu Mar 23 02:43:51 EST 2000
