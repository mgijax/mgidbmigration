#!/bin/csh -f

#
# wts2-1155/fl2-394/GOC taking over GOA mouse, GOA human, etc.
#
# per David/Cindy : move *all* before we push to production
#
# loadadmin:
#       dailytasks.csh:${GOLOAD}/godaily.sh -> ${GOLOAD}/bin/go.sh
#       sundaytasks.csh:${GOLOAD}/go.sh -> ${GOLOAD}/bin/go.sh
#
#       new:  ${GOLOAD}/bin/goload.sh
#
# mirror_wget : remove
#       ftp.geneontology.org.external2go
#       ftp.geneontology.org.goload
#       snapshot.geneontology.org.goload
#       snapshot.geneontology.org.goload.noctua
#
#       ftp.ebi.ac.uk.goload : still need for reports_db/GO_gpi.py
#
# goload
#       gomousenoctua.py:
#       from: https://snapshot.geneontology.org/products/upstream_and_raw_data/noctua_mgi.gpad.gz
#       to  : http://snapshot.geneontology.org/annotations/mgi.gpad.gz
#
#       will need to add uberon id -> emapa id : sierra did this in the mgd.gpad file already
#
#       proteincomplex.sh : remove
#
# annotload : changing isGOmouseNoctua -> isGO
#       isGOAmouse : remove
#       isGOAhuman : remove
#       isGOrat    : remove
# remove this logic:
#        # delete any go-annotations that are using withdrawn markers
#
# qcreports_db
#       mgd/GO_EvidenceProperty.py
#       mgd/GO_stats.py (NOCTUA_ may no longer exist)
#       mgd/GO_PM2GeneRefsNotInMGI.py
#       monthly/MRK_GOAnnot.py
#       qcr.shtml:
#               remove: 7. QC: GOAMouse/invalid pubmedids (ln)
#               keep  : 8. QC: GOMouseNoctua/invalid pubmedids (ln)
#               remove: Data Loads:  GOA/Human Load, GOA/Rat Load
#
# reports_db
#       remove: daily/GO_gene_association.py
#
#       per David: GO should provide
#       gene_association.mgi
#       mgi.gpad
#
#       per David: unknown : this is generated by daily/GO_gene_association.py
#       gene_association_pro.mgi
#
#       per David: wonâ€™t be needed since they only exist to be picked up by GO:
#       gene_association_nonoctua.mgi
#       gene_association_nonoctua_pro.mgi
#       mgi_nonoctua.gpad
#
# mgicacheload
#       inferredfrom.goahumanload : remove
#       inferredfrom.goratload    : remove
#       inferredfrom.goaload
#       inferredfrom.gocfpload
#       inferredfrom.gorefgenload
#       inferredfrom.gomousenoctua -> inferredfrom.go && change "NOCTUA"%" to "GO_Central"
#
# uniprotload: remove
#       makeGOAnnot.sh
#       makeGOAnnot.py
#       goecannot.config.default
#       goipannot.config.default
#       gospkwannot.config.default
#       /data/downloads/go_translation
#       /data/downloads/current.geneontology.org/ontology/external2go
#
# lib_py_report
#       go_annot_extensions.py
#
# 1. MGI_User.login; remove "NOCTUA_" from "NOCTUA_xxx" users
#       leave only GO_Central and other GOA_% 
# 2. David: review _vocab_key = 82 and remove any obsolete terms
# 3. David: change description for GO_REF references at MGI and at GO
# 4. goload.error : Reactome references are not in MGI
#       when we process the GOA/Mouse, we save all of the Reactome rows 
#       (for which we do not have the reference in MGI) to a goamouse.gaf file. 
#       Then we append the goamouse.gaf to the end of our mgi/gaf.
#       Since MGI will no longer be generating the MGI/GAF (GO will), we need another solution
#

if ( ${?MGICONFIG} == 0 ) then
        setenv MGICONFIG /usr/local/mgi/live/mgiconfig
endif

source ${MGICONFIG}/master.config.csh

cd `dirname $0`

date
 
cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0 

-- GO_REF references
select a2.jnumid, a1.accid, a2.short_citation 
from acc_accession a1, bib_citation_cache a2 
where a1._logicaldb_key = 185
and a1.prefixpart = 'GO_REF:'
and a1._object_key = a2._refs_key
;

delete from mgi_user where login in ('dots_seqload');
delete from mgi_user where login in ('dfci_seqload');
delete from mgi_user where login in ('nia_seqload');
delete from mgi_user where login in ('mkiaa_load');
delete from mgi_user where login in ('nia_assocload');
delete from mgi_user where login in ('snp_load');
delete from mgi_user where login in ('dots_assocload');
delete from mgi_user where login in ('dfci_assocload');
delete from mgi_user where login in ('unists_nomenload');
delete from mgi_user where login in ('unists_coordload');
delete from mgi_user where login in ('mirbase_coordload');
delete from mgi_user where login in ('mirbase_load');
delete from mgi_user where login in ('qtl_coordload');
delete from mgi_user where login in ('treefam_assocload');
delete from mgi_user where login in ('gtlite_assocload');
delete from mgi_user where login in ('roopenian-sts_coordload');
delete from mgi_user where login in ('mousecyc_load');
delete from mgi_user where login in ('gbpreprocessor');
delete from mgi_user where login in ('gbgtfilter');
delete from mgi_user where login in ('mousefunc_assocload');
delete from mgi_user where login in ('gtblatpipeline');
delete from mgi_user where login in ('tr9601dna_coordload');
delete from mgi_user where login in ('tr9583micro_coordload');
delete from mgi_user where login in ('tr9873mirbase_coordload');
delete from mgi_user where login in ('tr9612_annotload');
delete from mgi_user where login in ('mtoload');
delete from mgi_user where login in ('genmapload');
delete from mgi_user where login in ('trna_coordload');
delete from mgi_user where login in ('orthology_load');
delete from mgi_user where login in ('eurogenoannot_load');
delete from mgi_user where login in ('mapviewload');
delete from mgi_user where login in ('qtlarchiveload');
delete from mgi_user where login in ('emapload');
delete from mgi_user where login in ('rvload');
delete from mgi_user where login in ('fearload');
delete from mgi_user where login in ('scrum-dog');
delete from mgi_user where login in ('hgnc_homologyload');
delete from mgi_user where login in ('homologeneload');
delete from mgi_user where login in ('hybrid_homologyload');
delete from mgi_user where login in ('ps');
delete from mgi_user where login in ('smc');

-- set users to Inactive
update mgi_user set _userstatus_key = 316351
where login in ('adiehl','benjal','bobs','cml','dbl','dbradt','deg','drj','dlb','hdene','hdt','hjd','il','jbd','jbubier','jchu','jte','ksf','ljm','llw2','lmc', 'mac', 'rbabiuk', 'tbreddy', 'tmeehan', 'wpitman', 'fantom2', 'djd', 'dow', 'jak', 'jblake', 'jlewis', 'jsb', 'jw', 'klf', 'kstone', 'kub', 'lnh', 'mbw', 'mjv', 'mikem', 'jrecla')
;

update mgi_user set _usertype_key = 316352 where login in ('jrecla');
delete from voc_term where _term_key in (316358,316356);

update voc_term set term = 'go_qualifier_term', abbreviation = 'go_qualifier_term' where _term_key = 18583064;
insert into voc_term values((select nextval('voc_term_seq')), 82, 'go_qualifier_id', 'go_qualifier_id', null, 137, 0, 1001, 1001, now(), now());

# probably remove
DROP FUNCTION IF EXISTS VOC_deleteGOWithdrawn();

EOSQL

#
# set all GO annotations = GO_Central (1539)
# the goload will delete them later
#
${PG_MGD_DBSCHEMADIR}/trigger/VOC_Evidence_drop.object
${PG_MGD_DBSCHEMADIR}/trigger/VOC_Evidence_Property_drop.object
cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0 

-- move all of the GOA_*, NOCTUA_* -> GO_Central

select _Annot_key into temp toUpdate1 from VOC_Annot where _AnnotType_key = 1000;
select p._AnnotEvidence_key into temp toUpdate2 from VOC_Annot a, VOC_Evidence e, VOC_Evidence_Property p
where a._AnnotType_key = 1000
and a._Annot_key = e._Annot_key
and e._AnnotEvidence_key = p._AnnotEvidence_key;
;

create index td_idx1 on toUpdate1(_Annot_key);
create index td_idx2 on toUpdate2(_AnnotEvidence_key);
update voc_evidence e set _createdby_key = 1539, _modifiedby_key = 1539 from toUpdate1 t where t._annot_key = e._annot_key;
update voc_evidence_property p set _createdby_key = 1539, _modifiedby_key = 1539 from toUpdate2 t where t._annotevidence_key = p._annotevidence_key;

select s._Assoc_key 
into temp toUpdate3 
from MGI_Reference_Assoc s, MGI_User u 
where s._createdby_key = u._user_key
and u.login like 'GOA_%'
;
create index td_idx3 on toUpdate3(_Assoc_key);
update MGI_Reference_Assoc s set _createdby_key = 1539, _modifiedby_key = 1539 from toUpdate3 t where t._assoc_key = s._assoc_key;

select s._Assoc_key 
into temp toUpdate4 
from BIB_Workflow_Status s, MGI_User u 
where s._createdby_key = u._user_key
and u.login like 'GOA_%'
;
create index td_idx4 on toUpdate4(_Assoc_key);
update BIB_Workflow_Status s set _createdby_key = 1539, _modifiedby_key = 1539 from toUpdate4 t where t._assoc_key = s._assoc_key;

-- set 'GOC' -> GO_MGI to re-use this _user_key
update MGI_User set login = 'GO_MGI', name = 'GO_MGI' where _user_key = 1503;
delete from MGI_User where login like 'GOA_%';
delete from mgi_user where login like 'NOCTUA_%';

EOSQL
${PG_MGD_DBSCHEMADIR}/trigger/VOC_Evidence_create.object
${PG_MGD_DBSCHEMADIR}/trigger/VOC_Evidence_Property_create.object

#
#
# mirror_wget
# remove: ftp.geneontology.org.external2go
# remove: ftp.geneontology.org.goload
# remove: snapshot.geneontology.org.goload.noctua
# add   : snapshot.geneontology.org.goload.annotations
# add to packagelist.daily:  snapshot.geneontology.org.goload.annotations
#

#rm -rf ${DATADOWNLOADS}/go_noctua 
#rm -rf ${DATADOWNLOADS}/go_translation 
#rm -rf ${DATADOWNLOADS}/go_translation 
#rm -rf ${DATADOWNLOADS}/go_gene_assoc
#rm -rf ${DATADOWNLOADS}/goa
#rm -rf ${DATADOWNLOADS}/current.geneontology.org 
#rm -rf ${DATADOWNLOADS}/snapshot.geneontology.org
#rm -rf ${DATADOWNLOADS}/ftp.ebi.ac.uk/pub/databases/GO
#rm -rf ${DATADOWNLOADS}/mirror_wget_logs/ftp.geneontology.org.external2go*
#rm -rf ${DATADOWNLOADS}/mirror_wget_logs/ftp.geneontology.org.goload*
#rm -rf ${DATADOWNLOADS}/mirror_wget_logs/ftp.ebi.ac.uk.goload*
#rm -rf ${DATADOWNLOADS}/mirror_wget_logs/snapshot.geneontology.org.goload.noctua*

#${MIRROR_WGET}/download_package snapshot.geneontology.org.goload.annotations
#${MIRROR_WGET}/download_package purl.obolibrary.org.pr
#${MIRROR_WGET}/download_package purl.obolibrary.org.uberon.obo
#${MIRROR_WGET}/download_package raw.githubusercontent.com.evidenceontology
#${MIRROR_WGET}/download_package ftp.ebi.ac.uk.goload

#scp bhmgiapp01:/data/downloads/uniprot/uniprotmus.dat /data/downloads/uniprot

#rm -rf ${DATALOADSOUTPUT}/go
#rm -rf ${DATALOADSOUTPUT}/uniprot/uniprotload/output/*
#rm -rf ${DATALOADSOUTPUT}/uniprot/uniprotload/logs/*

# run uniprotload/now without GO annotations
# this must run before the GO load, which will generate the GPI file, which uses uniprot info
${UNIPROTLOAD}/bin/uniprotload.sh 

# run go/annotations
#${GOLOAD}/Install
${GOLOAD}/bin/goload.sh

# per David: GO should provide
#rm -rf ${PUBREPORTDIR}/output/gene_association.mgi*
#rm -rf ${PUBREPORTDIR}/output/mgi.gpad*
#rm -rf ${FTPREPORTDIR}/gene_association.mgi*
#rm -rf ${FTPREPORTDIR}/mgi.gpad*

# per David: wonâ€™t be needed since they only exist to be picked up by GO:
#rm -rf ${PUBREPORTDIR}/output/gene_association_nonoctua.mgi*
#rm -rf ${PUBREPORTDIR}/output/gene_association_nonoctua_pro.mgi*
#rm -rf ${PUBREPORTDIR}/output/mgi_nonoctua.gpad*
#rm -rf ${FTPREPORTDIR}/gene_association_nonoctua.mgi*
#rm -rf ${FTPREPORTDIR}/gene_association_nonoctua_pro.mgi*
#rm -rf ${FTPREPORTDIR}/mgi_nonoctua.gpad*

# 11/10 : ask dave
# per David: unknown
##rm -rf ${PUBREPORTDIR}/output/gene_association_pro.mgi*
##rm -rf ${FTPREPORTDIR}/gene_association_pro.mgi*

# this report is obsolete; but run this version to help with testing?
#rm -rf *.mgi *.gpad
##${PYTHON} GO_gene_association.py 

#cd ${QCRPTS}
#source ./Configuration
#cd mgd
#${PYTHON} GO_EvidenceProperty.py
#${PYTHON} GO_stats.py

#
# David:  review _vocab_key = 82 and remove any obsolete terms
#
cat - <<EOSQL | ${PG_DBUTILS}/bin/doisql.csh $0 

-- property terms that are no longer used; can be deleted from voc_term
select v.*
from VOC_Term v
where v._vocab_key = 82
and not exists (select 1 from VOC_Annot a, VOC_Evidence e, VOC_Evidence_Property p 
where a._annottype_key = 1000 
and a._annot_key = e._annot_key
and e._annotevidence_key = p._annotevidence_key
and p._propertyterm_key = v._term_key
)
order by v.term
;

-- property terms that are used
select v.*
from VOC_Term v
where v._vocab_key = 82
and exists (select 1 from VOC_Annot a, VOC_Evidence e, VOC_Evidence_Property p 
where a._annottype_key = 1000 
and a._annot_key = e._annot_key
and e._annotevidence_key = p._annotevidence_key
and p._propertyterm_key = v._term_key
)
order by v.term
;

EOSQL

#
# remove: 7. QC: GOAMouse/invalid pubmedids (ln)
# keep  : 8. QC: GOMouseNoctua/invalid pubmedids (ln)
# remove: goload/goamouse/index.html">GOA/Mouse Load</A> <B>(krc)</B>
# remove: goload/goahuman/index.html">GOA/Human Load</A> <B>(krc)</B>
# remove: goload/gorat/index.html">GO/Rat Load</A> <B>(krc)</B>
# remove: goload/gorefgen/index.html">GO/PAINT Load</A> <B>(krc)</B>
# remove: goload/gocfp/index.html">GO/CFP (aka GOC) Load</A> <B>(krc)</B>
# remove: goload/gomousenoctua/index.html">GO/Mouse/Noctua Load</A> <B>(dph)</B>
# add: goload/index.html">GO Load</A> <B>(???)</B>
#

date 

